Monk and the Islands
Send Feedback
MONK AND THE ISLAND
Monk visits the land of Islands. There are a total of N islands numbered from 1 to N. Some pairs of islands are connected to each other by Bidirectional bridges running over water.
Monk hates to cross these bridges as they require a lot of efforts. He is standing at Island #1 and wants to reach the Island #N. Find the minimum the number of bridges that he shall have to cross, if he takes the optimal route.
Input:
First line contains T. T testcases follow.
First line of each test case contains two space-separated integers N, M.
Each of the next M lines contains two space-separated integers X and Y , denoting that there is a bridge between Island X and Island Y.
Output:
Print the answer to each test case in a new line.
Constraints:
1 = T = 10
1 = N = 10000
1 = M = 100000
1 = X, Y = N
SAMPLE INPUT
2
3 2
1 2
2 3
4 4
1 2
2 3
3 4
4 2
SAMPLE OUTPUT
2
2


#include<bits/stdc++.h>
using namespace std;
int main(){
	int t;
    cin>>t;
    while(t--){
        int n,m;
        cin>>n>>m;
        vector<int> adjList[n+1];
        for(int i=0;i<m;i++){
            int x,y;
            cin>>x>>y;
            adjList[x].push_back(y);
            adjList[y].push_back(x);
        }
        int lvl[n+1],vis[n+1];
        memset(lvl,0,sizeof(lvl));
        memset(vis,0,sizeof(vis));
        queue<int> q;
        q.push(1);
        vis[1] = 1;
        lvl[1] = 0;
        while(!q.empty()){
            int node = q.front();
            q.pop();
            for(auto x:adjList[node]){
                if(!vis[x]){
            		lvl[x] = 1+lvl[node];
                    q.push(x);
                    vis[x] = 1;
                }
            }
        }
        cout<<lvl[n]<<endl;
    }
}